{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Suit = cc.Enum({\n        Spade: 1,   //黑桃\n        Heart: 2,   //红桃\n        Club: 3,    //梅花（黑）\n        Diamond: 4,//方块（红）\n});\n\nvar A2_10JQK = 'NAN,A,2,3,4,5,6,7,8,9,10,J,Q,K'.split(',');//split() 方法用于把一个字符串分割成字符串数组。返回的是一个数组\n/*\n 扑克牌类，只用来表示牌的基本属性，不包含游戏逻辑，所有属性只读，\n 因此全局只需要有 52 个实例（去掉大小王），不论有多少副牌\n\n */\n\nfunction Card (point, suit) {\n    //为对象一次性定义多个属性\n    Object.defineProperties(this,{\n        point:{\n            value: point,\n            writable: false\n        },\n        suit: {\n            value: suit,//牌的花色\n            writable: false\n        },\n        //id可能的值为 0 到 51\n        id: {\n            value: (suit - 1) * 13 + (point -1),\n            writable: false\n        },\n        pointName: {\n            get: function () {\n                return A2_10JQK[this.point];//设置牌的大小\n            }\n        },\n        suitName: {\n            get: function () {\n                return Suit[this.suit];//设置牌花色名称\n            }\n        },\n        isBlackSuit:{//设置牌的颜色是黑色还是红色 黑桃、梅花是黑色\n            get: function () {\n                return this.suit == Suit.Spade || this.suit === Suit.Club;\n            }\n        },\n        isRedSuit: {//红桃、方片是红色\n            get: function () {\n                return this.suit === Suit.Heart || this.suit === Suit.Diamond;\n            }\n        },\n\n    });\n}\n\nCard.prototype.toString = function () {\n    return this.suitName + ' '+this.pointName;\n};\n\n//存放52张扑克牌实例\nvar cards = new Array(52);\n\nCard.fromId = function (id) {\n    return cards[id];\n};\n\n//初始化所有扑克牌\n(function createCards () {\n    for (var s = 1; s <= 4; s++){\n        for (var p = 1; p<=13; p++){\n            var card = new Card(p, s);\n            cards[card.id] = card;\n        }\n    }\n})();\n\n//手中牌的状态\nvar ActorPlayingState = cc.Enum({\n    Normal: -1,\n    Stand: -1,//停牌\n    Report: -1,//报到\n    Bust: -1, //爆了\n});\n\n//输赢\nvar Outcome = cc.Enum({\n    Win: -1,\n    Lose: -1,\n    Tie: -1,\n});\n\n//牌型，值越大越厉害\nvar Hand = cc.Enum({\n    Normal: -1, //无\n    BlackJack: -1,// 黑杰克\n    FiveCard: -1,//五小龙\n});\n\nmodule.exports = {\n    Suit: Suit,\n    Card: Card,\n    ActorPlayingState: ActorPlayingState,\n    Hand: Hand,\n    Outcome: Outcome,\n};"
  ]
}