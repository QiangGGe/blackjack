{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [
    "State",
    "require",
    "instance",
    "model",
    "playing",
    "on",
    "message",
    "msgToEvaluate",
    "evaluating",
    "exports",
    "init",
    "target",
    "console",
    "StateMachine",
    "initial",
    "PseudoState",
    "PseudoStateKind",
    "Initial",
    "bet",
    "settled",
    "to",
    "when",
    "entry",
    "onBetState",
    "exit",
    "onEndState",
    "initialP",
    "deal",
    "playersTurn",
    "dealersTurn",
    "onEnterDealState",
    "onPlayerTurnState",
    "onPlayersTurnState",
    "onEnterDealersTurnState",
    "StateMachineInstance",
    "initialise",
    "toDeal",
    "_evaluate",
    "toBet",
    "onDealed",
    "onPlayerActed",
    "onDealerActed",
    "setTimeout",
    "evaluate",
    "_getInstance",
    "_getModel",
    "module"
  ],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "\nvar State = require('state.com');\n\nvar instance;\nvar model;\nvar playing;\n\nfunction on (message){\n    return function (msgToEvaluate) {\n        return msgToEvaluate === message;\n    };\n}\n\nvar evaluating = false;\n\nexports = {\n    init: function (target) {\n        State.console = console;\n\n        model = new State.StateMachine(\"root\");\n        var initial = new State.PseudoState(\"init-root\", model, State.PseudoStateKind.Initial);\n\n        //当前这一把的状态\n        var bet = new State.State(\"下注\", model);\n        playing = new State.State(\"已开局\", model);\n        var  settled = new State.State(\"结算\", model);\n\n        initial.to(bet);\n        bet.to(playing).when(on(\"deal\"));\n        playing.to(settled).when(on(\"end\"));\n        settled.to(bet).when(on(\"bet\"));\n\n        bet.entry(function () {\n            target.onBetState(true);\n        });\n        bet.exit(function () {\n            target.onBetState(false);\n        });\n        settled.entry(function () {\n            target.onEndState(true);\n        });\n        settled.exit(function () {\n            target.onEndState(false);\n        });\n\n        //开局后的子状态\n\n        var initialP = new State.PseudoStateKind(\"init 已开局\", playing, State.PseudoStateKind.Initial);\n        var deal = new State.State(\"发牌\", playing);\n        var playersTurn = new State.State(\"玩家决策\", playing);\n        var dealersTurn = new State.State(\"庄家决策\", playing);\n\n        initialP.to(deal);\n        deal.to(playersTurn).when(on(\"dealed\"));\n        playersTurn.to(dealersTurn).when(on(\"player acted\"));\n\n        deal.entry(function () {\n            target.onEnterDealState();\n        });\n        playersTurn.entry(function () {\n            target.onPlayerTurnState(false);\n        });\n        playersTurn.exit(function () {\n            target.onPlayersTurnState(false);\n        });\n        dealersTurn.entry(function () {\n            target.onEnterDealersTurnState();\n        });\n\n        //create a State machine instance\n        instance = new State.StateMachineInstance(\"fsm\");\n        State.initialise(model, instance);\n\n    },\n\n    toDeal: function () {\n        this._evaluate('deal');\n    },\n\n    toBet: function () {\n        this._evaluate('bet');\n    },\n\n    onDealed: function () {\n        this._evaluate('dealed');\n    },\n    onPlayerActed: function () {\n        this._evaluate('player acted');\n    },\n    onDealerActed: function () {\n        this._evaluate('end');\n    },\n\n    _evaluate: function (message) {\n        if  (evaluating){\n            setTimeout(function () {\n                State.evaluate(model, instance, message);\n            }, 1);\n            return;\n        }\n        evaluating = true;\n        State.evaluate(model, instance, message);\n        evaluating = false;\n    },\n\n    _getInstance: function () {\n        return instance;\n    },\n\n    _getModel: function () {\n        return model;\n    }\n};\n\nmodule.exports = exports;"
  ]
}