{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "\nvar Types = require('Types');\nvar Utils = require('Utils');\nvar ActorPlayingState = Types.ActorPlayingState;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        //所有明牌\n        cards: {\n            default: [],\n            serializable: false,//序列化\n            visible: false\n        },\n        //暗牌 demo 暂存\n        holeCard: {\n            default: null,\n            seriablizable: false,\n            visible: false\n        },\n        //手上最接近21点的点数（有可能超过21点）\n        bestPoint: {\n            get: function () {\n                var minMax = Utils.getMinMaxPoint(this.cards);\n                return minMax.max;\n            }\n        },\n        //牌型，不考虑是否爆牌\n        hand: {\n            get: function () {\n                var count = this.cards.length;\n                if (this.holeCard){\n                    ++count;\n                }\n                if (count >= 5){\n                    return Types.Hand.FiveCard;//五小龙\n                }\n                if (count === 2 && this.bestPoint === 21){\n                    return Types.Hand.BlackJack;//\n                }\n                return Types.Hand.Normal;//普通牌型\n            }\n        },\n\n        canReport: {\n            get: function () {\n                return this.hand !== Types.Hand.Normal;\n            },\n            visible: false\n        },\n\n        renderer: {\n            default: null,\n            type: cc.Node\n        },\n        state: {\n            default: ActorPlayingState.Normal,\n            notify: function (oldState) {\n                if (this.state !== oldState){\n                    this.renderer.updateState();\n                }\n            },\n            type: ActorPlayingState,\n            serializable: false,\n        }\n    },\n\n    init: function () {\n        this.ready = true;\n        this.renderer = this.getComponent('ActorRenderer');\n    },\n\n    addCard: function (card) {\n        this.cards.push(card);\n        this.renderer.onDeal(card, true);//分配牌\n\n        var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;//concat 将多个数组合并\n        if (Utils.isBust(cards)){//是否爆牌\n            this.state = ActorPlayingState.Bust;\n        }\n    },\n\n    addHoleCard: function (card) {\n        this.holeCard = card;\n        this.renderer.onDeal(card,false);\n    },\n\n    stand: function () {\n        this.state = ActorPlayingState.Stand;//停牌\n    },\n\n    revealHoldCard: function () {\n        if (this.holeCard){\n            this.cards.unshift(this.holeCard);//unshift可向数组的开头添加一个或更多元素，并返回新的长度。\n        }\n    },\n\n    report: function () {\n        this.state = ActorPlayingState.Report;\n    },\n\n    reset: function () {\n        this.cards = [];\n        this.holeCard = null;\n        this.reported = false;\n        this.state = ActorPlayingState.Normal;\n        this.renderer.onReset();\n    }\n\n\n\n});\n"
  ]
}