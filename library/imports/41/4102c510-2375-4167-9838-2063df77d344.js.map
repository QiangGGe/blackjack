{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE7B,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,KAAK;;AAEd,cAAU,EAAE;;AAER,iBAAS,EAAC;AACN,eAAG,EAAE,eAAY;AACb,oBAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAC5E,oBAAI,MAAM,GAAG,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACzC,uBAAO,MAAM,CAAC,GAAG,CAAC;aACrB;AACD,oBAAQ,EAAE,IAAI;SACjB;KACJ;;AAED,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,MAAM,EAAE,CAAC;AACd,YAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;KAC9B;;;AAGD,WAAO,EAAE,mBAAY;AACjB,YAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,YAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC5B,YAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;;AAGhC,YAAI,SAAS,KAAK,EAAE,EAAC;AACjB,mBAAO,KAAK,CAAC;SAChB;;;AAGD,YAAI,SAAS,IAAI,EAAE,GAAG,EAAE,EAAC;AACrB,mBAAO,IAAI,CAAC;SACf;;AAED,YAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;AACnC,YAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;;AAE3D,gBAAQ,OAAO;AACX,iBAAK,KAAK,CAAC,OAAO,CAAC,GAAG;AAClB,uBAAO,IAAI,CAAC;AAAA,AAChB,iBAAM,KAAK,CAAC,OAAO,CAAC,IAAI;AACpB,uBAAO,KAAK,CAAC;AAAA,SACpB;;AAED,eAAO,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;KAC9B;;;AAGD,UAAM,EAAE,kBAAY,EAEnB;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var Actor = require('Actor');\nvar Utils = require('Utils');\n\ncc.Class({\n    extends: Actor,\n\n    properties: {\n       //\n        bestPoint:{\n            get: function () {\n                var cards = this.holeCard ? [this.holeCard].concat(this.cards) : this.cards;\n                var minMax = Utils.getMinMaxPoint(cards);\n                return minMax.max;\n            },\n            override: true\n        },\n    },\n\n    init: function () {\n        this._super();\n        this.renderer.initDealer();\n    },\n\n    //返回是否要牌\n    wantHit: function () {\n        var Game = require('Game');\n        var Types = require('Types');\n         var bestPoint = this.bestPoint;\n\n         //已经是最大牌了\n        if (bestPoint === 21){\n            return false;\n        }\n\n        //不论抽到什么牌肯定不会爆，那就接着抽\n        if (bestPoint <= 21 - 10){\n            return true;\n        }\n\n        var player = Game.instance.players;\n        var outcome = Game.instance._getPlayerResult(player, this);\n\n        switch (outcome){\n            case Types.Outcome.Win:\n                return true;\n            case  Types.Outcome.Lose:\n                return false;\n        }\n\n        return this.bestPoint < 17;\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n"
  ]
}