{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "var Game = require('Game');\nvar Types = require('Types');\nvar Utils = require('Utils');\nvar ActorPlayingState = Types.ActorPlayingState;//手中牌的状态\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n       playerInfo: cc.Node,\n        stakeOnTable: cc.Node,\n        cardInfo: cc.Node,\n        cardPrafab: cc.Prefab,\n        anchorCards: cc.Node,\n        spPlayerName: cc.Label,\n        labelPlayerName: cc.Label,\n        labelTotalStake: cc.Label,\n        spPlayerPhoto: cc.Sprite,\n        callCounter: cc.ProgressBar,\n        labelStakeOnTable: cc.Label,\n        spChips: {\n           default: [],\n            type: cc.Sprite\n        },\n        labelCardInfo: cc.Label,\n        spCardInfo: cc.Sprite,\n        animFX: cc.Node,\n        cardSpace: 0\n    },\n\n    // use this for initialization\n    onLoad: function () {\n\n    },\n\n    init: function (playerInfo, playerInfoPos, stakePos, turnDuration, switchSide) {\n        this.actor = this.getComponent('Actor');\n\n        this.isCounting = false;\n        this.counterTimer = 0;\n        this.turnDuration = turnDuration;\n\n        this.playerInfo.position = playerInfoPos;\n        this.stakeOnTable.position = stakePos;\n        this.labelPlayerName.string = playerInfo.name;\n        this.updateTotalStake(playerInfo.gold);\n        var photoIdx = playerInfo.photoIdx % 5;\n        this.spPlayerPhoto.spriteFrame = Game.instance.assetMng.playerPhotos[photoIdx];\n\n        this.animFX = this.animFX.getComponent('FXPlayer');\n        this.animFX.init();\n        this.animFX.show(false);\n\n        this.cardInfo.active = false;\n\n        if (switchSide){\n            this.spCardInfo.getComponent('SideSwitcher').switchSide();\n            this.spPlayerName.getComponent('SideSwither').switchSide();\n        }\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n        if (this.isCounting){\n            this.callCounter.progress = this.counterTimer/this.turnDuration;\n            this.counterTimer += dt;\n            if (this.counterTimer >= this.turnDuration){\n                this.isCounting = false;\n                this.callCounter.progress = 1;\n            }\n        }\n    },\n\n    //初始化发牌人\n    initDealer: function () {\n        //\n        this.actor = this.getComponent('Actor');\n\n        this.animFX = this.animFX.getComponent('FXPlayer');\n        this.animFX.init();\n        this.animFX.show(false);\n\n    },\n\n    //更新总的钱数\n    updateTotalStake: function (num) {\n        this.labelTotalStake.string = '$' + num;\n    },\n\n    //开始倒计时\n    startCountdown: function () {\n        if (this.callCounter){\n            this.isCounting = true;\n            this.counterTimer = 0 ;\n        }\n    },\n\n    //重置计时器\n    resetCountdown: function () {\n        if (this.callCounter){\n            this.isCounting = false;\n            this.counterTimer = 0;\n            this.callCounter.progress = 0;\n        }\n    },\n\n    playBlackJackFX: function () {\n        this.animFX.playFX('blackjack');\n    },\n\n    playBustFX: function () {\n        this.animFX.playFX('bust');\n    },\n\n    onDeal: function (card, show){\n        var newCard = cc.instantiate(this.cardPrafab).getComponent('Card');\n        this.anchorCards.addChild(newCard.node);\n        newCard.init(card);\n        newCard.reveal(show);\n\n        var startPos = cc.p(0,0);\n        var index = this.actor.cards.length - 1;\n        var endPos = cc.p(this.cardSpace * index, 0);\n        newCard.node .setPosition(startPos);\n        this._updatePointPos(endPos.x);\n\n        var moveAction = cc.moveTo(0.5, endPos);\n        var callback = cc.callFunc(this._onDealEnd,this);\n        newCard.node.runAction(cc.sequence(moveAction, callback));\n    },\n\n    _onDealEnd: function (target) {\n        this.resetCountdown();\n        if (this.actor.state === ActorPlayingState.Normal){\n            this.startCountdown();\n        }\n        this.updatePoint();\n\n    },\n\n    onReset: function () {\n        this.cardInfo.active = false;\n        this.anchorCards.removeAllChildren();\n        this._resetChips();\n    },\n\n    onRevealHoldCard: function () {\n        var card = cc.find('cardPrefab', this.anchorCards).getComponent(\"Card\");\n        card.reveal(true);\n        this.updateState();\n    },\n\n    updatePoint: function () {\n        this.cardInfo.active = true;\n        this.labelCardInfo.string = this.actor.bestPoint;\n        switch (this.actor.hand){\n            case Types.Hand.BlackJack:\n                this.animFX.show(true);\n                this.animFX.playFX('blackjack');\n                break;\n            case Types.Hand.FiveCard:\n                break;\n        }\n    },\n\n    _updatePointPos: function (xPos) {\n        this.cardInfo.setPosition(xPos + 50, 0);\n    },\n\n    showStakeChips: function (stake) {\n        var chips = this.spChips;\n        var count = 0;\n        if (stake > 50000){\n            count = 5;\n        } else  if(stake > 25000){\n            count = 4;\n        } else if (stake > 10000){\n            count = 3;\n        } else if (stake > 5000){\n            count = 2;\n        } else if (stake > 0){\n            count = 1;\n        }\n\n        for (var i = 0; i < count; ++i){\n            chips[i].enabled = true;\n        }\n    },\n\n    _resetChips: function () {\n        for (var i = 0; i<this.spChips.length; ++i){\n            this.spChips.enabled = false;\n        }\n    },\n\n    updateState: function () {\n        switch (this.actor.state){\n            case ActorPlayingState.Normal:\n                this.cardInfo.Active = true;\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texCardInfo;\n                this.updatePoint();\n                break;\n            case ActorPlayingState.Bust:\n                var min = Utils.getMinMaxPoint(this.actor.cards).min;\n                this.labelCardInfo.string = '爆牌(' + min +')';\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texBust;\n                this.cardInfo.active = true;\n                this.animFX.show(true);\n                this.animFX.playFX('bust');\n                this.resetCountdown();\n                break;\n            case ActorPlayingState.Stand:\n                var max = Utils.getMinMaxPoint(this.actor.cards).max;\n                this.labelCardInfo.string = '停牌(' + max + ')';\n                this.spCardInfo.spriteFrame = Game.instance.assetMng.texCardInfo;\n                this.resetCountdown();\n                break;\n        }\n    }\n\n\n\n\n});\n"
  ]
}