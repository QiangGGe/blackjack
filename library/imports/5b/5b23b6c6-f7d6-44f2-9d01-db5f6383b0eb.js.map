{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": ";;;AAGA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAE3B,EAAE,CAAC,KAAK,CAAC;AACD,eAAS,EAAE,CAAC,SAAS;;AAEzB,cAAU,EAAC;AACP,kBAAU,EAAE,EAAE,CAAC,MAAM;AACrB,gBAAQ,EAAC;AACL,uBAAS,EAAE;AACX,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;AACD,kBAAU,EAAC;AACP,uBAAS,EAAE;AACX,gBAAI,EAAE,SAAS;SAClB;AACD,sBAAc,EAAE,EAAE,CAAC,IAAI;KAC1B;;AAED,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,aAAa,EAAE,CAAC;KACxB;;;AAGD,iBAAa,EAAE,yBAAY;AACvB,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,WAAW,GAAG,SAAd,WAAW,CAAa,KAAK,EAAE;AACjC,gBAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,KAAK,EAAE;AAC/C,oBAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAC;AAC/C,wBAAI,CAAC,WAAW,EAAE,CAAC;iBACtB;aACJ,EAAE,IAAI,CAAC,CAAC;SACV,CAAC;AACF,aAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC,EAAC;AACrC,uBAAW,CAAC,CAAC,CAAC,CAAC;SAClB;KACJ;;;AAGD,eAAW,EAAE,uBAAY;AACrB,YAAI,QAAQ,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE,EAAC,EAAE,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,CAAC;AACzE,YAAI,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3C,YAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnC,YAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC3B,YAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC;KAExC;;AAED,cAAU,EAAE,sBAAY;AACpB,YAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;AAC3B,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;;KAEtC;;AAED,oBAAgB,EAAE,4BAAY;AAC1B,YAAI,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC;KAC3C;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "/**\n * Created by BDGame_qiang on 17/3/29.\n */\nvar Game = require('Game');//这里这个方法只是导出了Game这个类，而要调用它里面的方法还需要实例话一个对象来调用\n\ncc.Class({\n        extends: cc.Component,\n\n    properties:{\n        chipPrefab: cc.Prefab,//押注的金币预制资源\n        btnChips:{//下注的按钮\n            default: [],\n            type: cc.Node\n        },\n        chipValues:{ //下注按钮对应的下注值\n            default: [],\n            type: 'Integer'\n        },\n        anchorChipToss: cc.Node//金币位置的起始锚点\n    },\n\n    init: function () {\n        this._registerBtns();\n    },\n\n    //统一注册按钮的点击事件的函数\n    _registerBtns: function () {\n        var self = this;\n        var registerBtn = function (index) {\n          self.btnChips[i].on('touchstart', function (event) {\n              if (Game.instance.addStake(self.chipValues[index])){\n                  self.playAddChip();\n              }\n          }, this);\n        };//on，node节点上绑定的监听事件，参数1type：要监听的事件名称，参数2callBack:回调函数，参数3target:响应函数的调用者\n        for (var i=0;i<self.btnChips.length; ++i){\n            registerBtn(i);\n        }\n    },\n\n    //加注\n    playAddChip: function () {\n        var startPos = cc.P(cc.randomMinus1To1() * 50,cc.randomMinus1To1() * 50);//产生一个随机位置\n        var chip = cc.instantiate(this.chipPrefab);//实例化一个金币对象\n        this.anchorChipToss.addChild(chip);//将金币加入到金币特定的layer\n        chip.setPosition(startPos);//设置金币位置\n        chip.getComponent('TossChip').play();//播放金币投掷动画\n\n    },\n\n    resetChips: function () {\n        Game.instance.resetStake();\n        Game.instance.info.enabled = false;\n        // this.\n    },\n\n    resetTossedChips: function () {\n        this.anchorChipToss.removeAllChildren();\n    }\n\n});"
  ]
}